#include <boost/program_options.hpp>
#include <stdio.h>
#include <iostream> 

int main(int argc, char * argv[]) {
	using namespace boost::program_options;
	variables_map vm;
	try
	{
		options_description desc{"Options"};
		desc.add_options()
		("help,h", "Help screen")
		("prog,p", value<std::vector<std::string> >()->multitoken(), "Program to instrument with all parameters")
		("plugindir", value<std::string>()->default_value(std::string("@CMAKE_INSTALL_PREFIX@/lib")), "Directory containing the plugins (install lib directory)")
		("synch,s", bool_switch()->default_value(false), "Enable synchronization checker");

		store(parse_command_line(argc, argv, desc), vm);
		notify(vm);

		if (vm.count("prog") == 0) {
			std::cerr << "Program to instriment is not set, specify with -p or -prog" << std::endl; 
			exit(-1);
		} 
		std::vector<std::string> progName = vm["prog"].as<std::vector<std::string> >();
		std::string pluginDirectory = vm["plugindir"].as<std::string>();
		std::cerr << "Beginning Instrimentation of Program - " << progName[0] << std::endl;
		std::cerr << "Arguments to program: ";
		for (auto i : progName)
			std::cerr << i << " ";
		std::cerr << std::endl;
		std::cerr << "Plugin Directory In Use - " << pluginDirectory << std::endl; 
	} catch (const error &ex) {
		std::cerr << ex.what() << '\n';
	}
}