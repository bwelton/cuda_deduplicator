// typedef boost::function<int(void)> DriverAPICall;
// std::shared_ptr<InstrumentFactory> InstFactory;

// This is the prototype of the file
${RETURN_TYPE} ORIGINAL_${CALL_NAME}( ${PARAMETERS_FULL} ) { }

// This is the call that will take the place of the original
${RETURN_TYPE} INTER_${CALL_NAME}( ${PARAMETERS_FULL} ) {
	// Build the instriment factory
	BUILD_FACTORY

	std::tuple<${PARAMETER_TYPES}> params = std::make_tuple(${CALL_ID} ${PARAMETERS_NAMES});
	DriverAPICall call = std::bind(ORIGINAL_${CALL_NAME} ${PARAMETERS_NAMES});
	${RETURN_TYPE} ret = FACTORY_PTR->PerformAction<std::tuple<${PARAMETER_TYPES}> >(call, params);
	return ret;
}
